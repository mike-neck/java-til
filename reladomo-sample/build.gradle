buildscript {
    repositories {
        mavenCentral()
        // The following is only necessary if you want to use SNAPSHOT releases.
        // maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4'
    }
}

apply plugin: 'java'
apply plugin: 'org.junit.platform.gradle.plugin'

group = 'com.example'
version = '0.0.1'

ext {
    jdkVersion = '1.8'
    utf8 = 'UTF-8'

    reladomo = 'com.goldmansachs.reladomo'
    reladomoCore = 'reladomo'
    reladomoTest = 'reladomo-test-util'
    reladomoGen = 'reladomogen'
    reladomoGenUtil = 'reladomo-gen-util'
    reladomoVersion = '16.1.4'
}

tasks.withType(JavaCompile) {
    it.sourceCompatibility = jdkVersion
    it.targetCompatibility = jdkVersion
    it.options.encoding = utf8
}

repositories {
    mavenCentral()
}

configurations {
    reladomogen
}

dependencies {
    compile group: reladomo, name: reladomoCore, version: reladomoVersion
    compile 'com.h2database:h2:1.4.192'

    testCompile group: reladomo, name: reladomoTest, version: reladomoVersion
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.0.0-M4'

    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.0.0-M4'

    reladomogen group: reladomo, name: reladomoGen, version: reladomoVersion
    reladomogen group: reladomo, name: reladomoGenUtil, version: reladomoVersion
}

task genReladomo {
    group = 'reladomo'
    description = 'generates reladomo'
    ant.taskdef(name: it.name,
            classpath: configurations.reladomogen.asPath,
            classname: 'com.gs.fw.common.mithra.generator.MithraGenerator')
    doLast {
        ant.genReladomo xml: "$projectDir/src/main/resources/reladomo/models/ReladomoClassList.xml", 
                generateGscListMethod: true, generatedDir: "$buildDir/generated-sources/reladomo",
                nonGeneratedDir: "$projectDir/src/main/java"
    }
}

task genDdl {
    group = 'reladomo'
    description = 'generates ddl script'
    ant.taskdef name: it.name,
            classpath: configurations.reladomogen.asPath,
            classname: 'com.gs.fw.common.mithra.generator.dbgenerator.MithraDbDefinitionGenerator'
    doLast {
        ant.genDdl xml: "$projectDir/src/main/resources/reladomo/models/ReladomoClassList.xml",
                generatedDir: "$buildDir/generated-db/sql",
                databaseType: 'postgres'
    }
}

tasks.compileJava.dependsOn tasks.genReladomo

sourceSets {
    main {
        java {
            srcDir "$buildDir/generated-sources/reladomo"
        }
        resources {
            output.dir(buildBy: genDdl, "$buildDir/generated-db")
        }
    }
}
